;?= {"language":"markdown","kind":1}
; # Stereo
; The stereo pipeline occurs in 4 stages:
; 1. Capture
; 2. Rectification
; 3. Disparity matching
; 4. Depth Projection
; 
; From the depth map and the original RGB frame we can create an RGB-D map and create a point cloud with map be registered to the global map. This notebook is not concerned with the SLAM registration and only deals with the disparity and the depth maps simulatenously.
; 
; The FSW Vis pipeline stages will perform their processing and place the resultant maps in the right camera frame. The left camera frame will be left untouched so that the RGB map can be generated in the final stage.
;?s
;?= {"language":"markdown","kind":1}
; ## Capture setup
; First the setup of the frame pipeline to be sourced by `Cam` and be displayed by `VideoStreamer`. Remember, the left frame is the original left image and the right frame is the resultant map.
; 
; Send camera streaming to over VLC via the H264 encoder.
; 
; Connect to the stream with:
; ```bash
; $ vlc -vvv udp://@:5500 :demux=h264
; ```
; 
; > Note: The H264 encoder creates some delay on the stream
;?s
;?= {"language":"fprime","kind":2}
; Camera parameter setup
R00:00:00 cmdSeq.CS_RUN "/seq/cam001_config.bin" BLOCK
;?e {"time":1679251884.67619,"id":901,"name":"PrmIdUpdated","component":"prmDb","severity":"ACTIVITY_HI","message":"Parameter ID 6000 updated","args":[{"name":"Id","value":"6000","valueRaw":6000,"type":"U32"}]}
;?e {"time":1679251884.67695,"id":901,"name":"PrmIdUpdated","component":"prmDb","severity":"ACTIVITY_HI","message":"Parameter ID 6001 updated","args":[{"name":"Id","value":"6001","valueRaw":6001,"type":"U32"}]}
;?e {"time":1679251884.677659,"id":901,"name":"PrmIdUpdated","component":"prmDb","severity":"ACTIVITY_HI","message":"Parameter ID 6002 updated","args":[{"name":"Id","value":"6002","valueRaw":6002,"type":"U32"}]}
;?e {"time":1679251884.678392,"id":901,"name":"PrmIdUpdated","component":"prmDb","severity":"ACTIVITY_HI","message":"Parameter ID 6003 updated","args":[{"name":"Id","value":"6003","valueRaw":6003,"type":"U32"}]}
;?e {"time":1679251884.679097,"id":901,"name":"PrmIdUpdated","component":"prmDb","severity":"ACTIVITY_HI","message":"Parameter ID 6004 updated","args":[{"name":"Id","value":"6004","valueRaw":6004,"type":"U32"}]}
;?e {"time":1679251884.679808,"id":901,"name":"PrmIdUpdated","component":"prmDb","severity":"ACTIVITY_HI","message":"Parameter ID 6005 updated","args":[{"name":"Id","value":"6005","valueRaw":6005,"type":"U32"}]}
;?e {"time":1679251884.680552,"id":901,"name":"PrmIdUpdated","component":"prmDb","severity":"ACTIVITY_HI","message":"Parameter ID 6011 updated","args":[{"name":"Id","value":"6011","valueRaw":6011,"type":"U32"}]}
;?e {"time":1679251884.680839,"id":2009,"name":"CS_SequenceComplete","component":"cmdSeq","severity":"ACTIVITY_HI","message":"Sequence file /seq/cam001_config.bin complete","args":[{"name":"fileName","value":"/seq/cam001_config.bin","valueRaw":"/seq/cam001_config.bin","type":"string(60)"}]}
;?s
;?= {"language":"fprime","kind":2}
R00:00:00 cam.CONFIGURE 1640 1232 R_0 R_0 FALSE FALSE FALSE FALSE
R00:00:00 videoStreamer.DISPLAY UDP RIGHT  ; Display the resultant map
R00:00:00 videoStreamer.NETWORK_SEND "192.168.1.220" 5000 ; 

; Build the frame pipeline
R00:00:00 framePipe.CLEAR
;R00:00:00 framePipe.PUSH VIS DROP_ON_FULL
R00:00:00 framePipe.PUSH STREAMER NO_REPLY
R00:00:00 framePipe.CHECK
;?e {"time":1677991414.675591,"id":6007,"name":"CameraStreamConfiguring","component":"cam","severity":"ACTIVITY_HI","message":"Initializing camera stream @ 1640x1232","args":[{"name":"width","value":"1640","valueRaw":1640,"type":"U32"},{"name":"height","value":"1232","valueRaw":1232,"type":"U32"}]}
;?s
;?= {"language":"fprime","kind":2}
R00:00:00 cam.START
;?s
;?= {"language":"fprime","kind":2}
R00:00:00 cam.STOP
;?s
;?= {"language":"markdown","kind":1}
; ## Vision Setup
; The vision pipeline will set up the different processing steps used when passing through the Vis components. As mentioned before we will need to apply the following operations to each frame (left and right) as they come in from the camera:
; 1. **Rectification**
;     This step uses a precomputed map on both the left and right frames which is used to account for lens curvature and makes sure that straight lines across both frames will be aligned and straight. This is a requirement of the stereo matching algorithm as it scans along the X axis to look for pixel matches.
; 2. **Disparity Matching**
;     This step is the most compute intensive step. The BM and SGBM methods provided by OpenCV involve scanning the right frame for pixel matches from the left frame. Other methods could be implemented using a deep learning U-net though this is not yet supported in FSW.
; 3. **Depth Projection**
;     The depth projection step is a linear operation that involves using the calibrated camera extrinsics to map disparity matches to points in 3D space in the camera frame.
;?s
;?= {"language":"fprime","kind":2}
; Load the camera model
R00:00:00 cmdSeq.CS_RUN "/seq/vis000_model-2.bin" BLOCK

;R00:00:00 cmdSeq.CS_RUN "/seq/vis001_stereo.bin" BLOCK
;?e {"time":1677991426.857539,"id":408,"name":"NoOpStringReceived","component":"cmdDisp","severity":"ACTIVITY_HI","message":"Received a NO-OP string=Loading camera model '656x493 - 2'","args":[{"name":"message","value":"Loading camera model '656x493 - 2'","valueRaw":"Loading camera model '656x493 - 2'","type":"string(40)"}]}
;?e {"time":1677991426.860994,"id":408,"name":"NoOpStringReceived","component":"cmdDisp","severity":"ACTIVITY_HI","message":"Received a NO-OP string=Finished loading '656x493 - 2'","args":[{"name":"message","value":"Finished loading '656x493 - 2'","valueRaw":"Finished loading '656x493 - 2'","type":"string(40)"}]}
;?e {"time":1677991426.861232,"id":2009,"name":"CS_SequenceComplete","component":"cmdSeq","severity":"ACTIVITY_HI","message":"Sequence file /seq/vis000_model-2.bin complete","args":[{"name":"fileName","value":"/seq/vis000_model-2.bin","valueRaw":"/seq/vis000_model-2.bin","type":"string(60)"}]}
;?s
;?= {"language":"fprime","kind":2}
R00:00:00 framePipe.CLEAR
R00:00:00 framePipe.PUSH VIS DROP_ON_FULL
R00:00:00 framePipe.PUSH STREAMER NO_REPLY
R00:00:00 framePipe.CHECK

R00:00:00 videoStreamer.DISPLAY NONE LEFT

;?e {"time":1677991939.546076,"id":6102,"name":"NotValidated","component":"framePipe","severity":"WARNING_LO","message":"Frame pipeline has not been validated by 'CHECK'","args":[]}
;?s
;?= {"language":"fprime","kind":2}
R00:00:00 vis.CLEAR
R00:00:00 vis.SCALE 0.4 0.4 LINEAR
R00:00:00 vis.RECTIFY
;R00:00:00 vis.COLORMAP AUTUMN BOTH
;?s
;?= {"language":"fprime","kind":2}
R00:00:00 framePipe.SHOW
;?s
;?= {"language":"fprime","kind":2}
R00:00:00 cam.START
;?s
;?= {"language":"fprime","kind":2}
R00:00:00 cam.STOP